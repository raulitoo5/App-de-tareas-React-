{"version":3,"sources":["TodoContext/TodoContext.js","hooks/useLocalStorage.js","components/ToDoCounter/ToDoCounter.js","components/ToDoList/ToDoList.js","components/ToDoSearch/ToDoSearch.js","components/ToDoItem/ToDoItem.js","components/CreateToDoButton/CreateToDoButton.js","skeletons/TodosLoading/TodosLoading.js","Modal/Modal.js","components/TodoForm/TodoForm.js","AppUI.js","App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","_ref","children","item","todos","actualizarItem","actualizarTodos","loading","error","itemName","initalValue","setItem","useState","setLoading","setError","useEffect","setTimeout","localStorageItem","localStorage","getItem","parsedItem","JSON","parse","stringify","console","log","newItem","useLocalStorage","buscador","setBuscador","openModal","setOpenModal","todosCompletados","filter","todo","completado","length","totalTodos","todosBuscados","todoText","text","toLowerCase","searchText","includes","createElement","Provider","value","completarTodo","nuevosTodos","todoIndex","findIndex","deleteTodo","addTodo","texto","push","ToDoCounter","useContext","className","ToDoList","props","ToDoSearch","placeholder","onChange","event","target","TodoItem","onComplete","onDelete","onClick","FaCheck","FaTrash","CreateTodoButton","state","TodosLoading","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","valorInput","setValorInputo","onSubmit","preventDefault","type","onCancel","AppUI","Fragment","map","key","App","createRoot","render"],"mappings":"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","file":"static/js/main.9b7f7f82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\r\nimport { useState } from \"react\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\n// Esta función la creamos para que sea más cómodos y no tengamos que llamar a \r\n// TodoContext.Provider todo el rato\r\nfunction TodoProvider({ children }) {\r\n\r\n    // Lo de los puntos es para renombrar los elementos del objeto\r\n    // ya que si no ponemos : tenemos que poner el mismo nombre\r\n    // que hemos especificado que iba a devolver el hook\r\n    const { item: todos, actualizarItem: actualizarTodos, loading, error } = useLocalStorage('todos_v1', []);\r\n    const [buscador, setBuscador] = useState('');\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    // Con la función filter y esas condiciones estamos obteniendo\r\n    // todos los todos con el campo completado a true\r\n    // Con la doble negación estamos conviertiendo el valor a boolenao\r\n    // De forma que si por ejemplo tuviera un string se convertiría en bool\r\n    const todosCompletados = todos.filter(todo => !!todo.completado).length;\r\n    const totalTodos = todos.length;\r\n\r\n    // Con filter se crea un nuevo array con los elementos que cumplan\r\n    // la condición\r\n    const todosBuscados = todos.filter(\r\n        (todo) => {\r\n             const todoText = todo.text.toLowerCase(); \r\n             const searchText = buscador.toLowerCase(); \r\n             \r\n             return todoText.includes(searchText); \r\n            }\r\n        );\r\n\r\n    const completarTodo = (text) => {\r\n        // Copiamos el array de todos en nuevosTodos \r\n        // El operador ... es para que se copie todo el contendio\r\n        const nuevosTodos = [...todos];\r\n        // Con esta funcion devolvemos el índice del todo que corresponda\r\n        // Para cada todo verificamos si su texto coincide con el que texto\r\n        // que le hemos pasado que es lo que estamos buscando\r\n        const todoIndex = nuevosTodos.findIndex(\r\n            (todo) => todo.text == text\r\n        );\r\n\r\n        nuevosTodos[todoIndex].completado = 'true';\r\n        actualizarTodos(nuevosTodos);\r\n    };\r\n\r\n    const deleteTodo = (text) => {\r\n        const nuevosTodos = todos.filter(\r\n            (todo) => todo.text != text\r\n        )\r\n        actualizarTodos(nuevosTodos);\r\n    };\r\n\r\n    const addTodo = (texto) => {\r\n        const nuevosTodos = [...todos];\r\n        nuevosTodos.push({\r\n            text: texto,\r\n            completado: false,\r\n        });\r\n        actualizarTodos(nuevosTodos);\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            todosBuscados,\r\n            totalTodos,\r\n            todosCompletados,\r\n            actualizarTodos,\r\n            buscador,\r\n            setBuscador,\r\n            completarTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal,\r\n            addTodo\r\n        }}>\r\n            {children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// Creación de un hook para usar localStorage con cualquier tipo\r\n// de dato.\r\nfunction useLocalStorage(itemName, initalValue) {\r\n  const [item, setItem] = useState(initalValue);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect( () => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n\r\n        let parsedItem;\r\n\r\n        if (!localStorageItem) {\r\n          localStorage.setItem(itemName, JSON.stringify(initalValue));\r\n          parsedItem = initalValue;\r\n        } else {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n          setItem(parsedItem);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n        console.log(\"El error es: \", error);\r\n      }\r\n    }, 2000);\r\n  }, []);\r\n\r\n  // Funcion para guardar los cambios en Storage\r\n  const actualizarItem = (newItem) => {\r\n    localStorage.setItem(itemName, JSON.stringify(newItem));\r\n    setItem(newItem);\r\n  };\r\n\r\n  return { item, actualizarItem, loading, error };\r\n}\r\n\r\nexport { useLocalStorage };","import { TodoContext } from '../../TodoContext/TodoContext';\r\nimport './ToDoCounter.css';\r\nimport React from 'react';\r\n\r\nfunction ToDoCounter(){\r\n\r\n    const {\r\n      todosCompletados,\r\n      totalTodos,\r\n    } = React.useContext(TodoContext);\r\n\r\n    return(\r\n      <h1 className='ToDoCounter'>\r\n        \r\n        Has completado <span>{todosCompletados}</span> de <span>{totalTodos}</span> TODOS\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  export {ToDoCounter};","import './ToDoList.css';\r\nimport React from 'react';\r\n\r\nfunction ToDoList(props){\r\n    return(\r\n        <ul className=\"TodoList\">\r\n            {props.children}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport {ToDoList}","import { useContext } from 'react';\r\nimport './ToDoSearch.css';\r\nimport React from 'react';\r\nimport { TodoContext } from '../../TodoContext/TodoContext';\r\n \r\nfunction ToDoSearch(){\r\n\r\n    const{\r\n        buscador,\r\n        setBuscador\r\n    } = useContext(TodoContext);\r\n    \r\n    return(\r\n        <input \r\n            className='TodoSearch' \r\n            placeholder=\"Cortar cebolla\"\r\n            value={buscador}\r\n            onChange={(event) => {\r\n                setBuscador(event.target.value);\r\n            }}   \r\n        />\r\n    );\r\n}\r\n\r\nexport {ToDoSearch};","import './ToDoItem.css';\r\nimport React from 'react';\r\nimport { FaCheck, FaTrash } from 'react-icons/fa'; // Importamos los íconos\r\n\r\n\r\nfunction TodoItem({text, completado, onComplete, onDelete}){\r\n    return(\r\n      <li className=\"TodoItem\">\r\n        <span \r\n          className= {`Icon Icon-check ${completado && \"Icon-check--active\"}`}\r\n          onClick={onComplete}\r\n        >\r\n          <FaCheck />\r\n        </span>\r\n\r\n        <p  className={`TodoItem-p ${completado && \"TodoItem-p--complete\"} `}> {text} </p>\r\n        <span \r\n          className=\"Icon Icon-delete\"\r\n          onClick={onDelete}\r\n        > \r\n          <FaTrash />\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n  \r\nexport {TodoItem}","import './CreateToDoButton.css';\r\nimport React from 'react';\r\n\r\nfunction CreateTodoButton({setOpenModal}){\r\n    return(\r\n        <button \r\n            className='CreateToDoButton'\r\n            onClick={\r\n                () => {setOpenModal (state => !state)}\r\n            }\r\n            >+</button>\r\n    );\r\n}\r\n\r\nexport {CreateTodoButton};","import { useState } from 'react';\r\nimport './TodosLoading.css';\r\nimport React from 'react';\r\n \r\nfunction TodosLoading(){\r\n\r\n    return(\r\n        <div className='TodosLoading-container'>\r\n            <span className='TodosLoading-completeIcon'>\r\n\r\n            </span>\r\n\r\n            <p className='TodosLoading-text'>\r\n                Cargando...\r\n            </p>\r\n\r\n            <span className='TodosLoading-deleteIcon'>\r\n\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {TodosLoading};","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport {Modal};","import React, { useContext, useState } from \"react\";\r\nimport './TodoForm.css';\r\nimport { TodoContext } from \"../../TodoContext/TodoContext\";\r\n\r\nfunction TodoForm() {\r\n    const {\r\n        setOpenModal,\r\n        addTodo,\r\n    } = useContext(TodoContext);\r\n\r\n    const [valorInput, setValorInputo] = useState('');\r\n\r\n    const onSubmit = (event) => {\r\n        // El metodo preventDefault() evita que cuando el evento se ejecute se vuelva a recargar la página\r\n        // es decir, evitamos su comportamiento por defecto que es el de recargar la página.\r\n        event.preventDefault();\r\n        setOpenModal(false);\r\n        addTodo(valorInput);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setValorInputo(event.target.value);\r\n    }; \r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label> Escribe tu nuevo TODO </label>\r\n            <textarea \r\n                placeholder='Hacer la cama' \r\n                value={valorInput}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button type=\"button\" className=\"TodoForm-button TodoForm-button--cancel\" onClick={onCancel}> Cancelar </button>\r\n                <button type=\"submit\" className=\"TodoForm-button TodoForm-button--add\"> Añadir </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport { TodoForm }","import './App.css';\r\nimport { ToDoCounter } from './components/ToDoCounter/ToDoCounter.js';\r\nimport { ToDoList } from './components/ToDoList/ToDoList.js';\r\nimport { ToDoSearch } from './components/ToDoSearch/ToDoSearch.js';\r\nimport { TodoItem } from './components/ToDoItem/ToDoItem.js';\r\nimport { CreateTodoButton } from './components/CreateToDoButton/CreateToDoButton.js';\r\nimport React from 'react';\r\nimport { TodosLoading } from './skeletons/TodosLoading/TodosLoading.js';\r\nimport { TodoContext } from './TodoContext/TodoContext.js';\r\nimport {Modal} from './Modal/Modal.js';\r\nimport { TodoForm } from './components/TodoForm/TodoForm.js';\r\n\r\nfunction AppUI() {\r\n\r\n  const {\r\n    loading,\r\n    error,\r\n    todosBuscados,\r\n    completarTodo,\r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal,\r\n  } = React.useContext(TodoContext);\r\n\r\n  return (\r\n      <>\r\n        <ToDoCounter />\r\n\r\n        <ToDoSearch />\r\n        <ToDoList>\r\n          {loading &&\r\n            <>\r\n              <TodosLoading />\r\n              <TodosLoading />\r\n              <TodosLoading />\r\n            </>\r\n          }\r\n          {error && <p> Error: {error} </p>}\r\n          {(!loading && todosBuscados.length == 0) && <p> Crea tu primer todo </p>}\r\n\r\n          {todosBuscados.map(todo => (\r\n            <TodoItem\r\n              key={todo.text}\r\n              text={todo.text}\r\n              completado={todo.completado}\r\n              onComplete={() => completarTodo(todo.text)}\r\n              onDelete={() => deleteTodo(todo.text)}\r\n            />\r\n          ))}\r\n        </ToDoList>\r\n        <CreateTodoButton \r\n            setOpenModal={setOpenModal}\r\n            openModal={openModal}\r\n        />\r\n\r\n        {openModal && (\r\n        <Modal>\r\n          <TodoForm />\r\n        </Modal>\r\n        )}\r\n      </>\r\n  );\r\n}\r\n\r\nexport { AppUI };\r\n","import React from 'react';\r\nimport { TodoProvider } from './TodoContext/TodoContext';\r\nimport {AppUI} from './AppUI.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoProvider>\r\n      <AppUI />\r\n    </TodoProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}